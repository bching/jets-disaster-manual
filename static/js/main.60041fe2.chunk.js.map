{"version":3,"sources":["content/aboutContent.js","content/earthquakeContent.js","content/tsunamiContent.js","content/landslideContent.js","content/volcanoContent.js","App.js","serviceWorker.js","index.js"],"names":["aboutText","leadText","text","one","two","three","left","right","four","five","six","AboutContent","toggle","this","props","react_default","a","createElement","className","Component","reportVocab","earthquakeText","tvVocabJson","tvRikai","vocab","tvPhraseJson","phrase","tvPhraseArr","Object","keys","forEach","key","push","scenarioTwoVocab","scenario2","scenarioTwoPhrases","RenderObjectsOfList","scen2Arr","content","map","index","wordList","word","EarthquakeContent","goal","scenario","question","actionOne","actionOneResult","actionTwo","actionTwoResult","youtubeBox","emergencyInfo","linkOne","href","link","linkTwo","tvScenario","definitionRed","mag","magnitudeDef","shindo","shindoDef","eqRecordRow","kobe","tohoku","kumamoto","header","quickNotes","point1","point2","point3","action","vocabHeader","tsunamiText","TsunamiContent","landslideText","LandslideContent","volcanoText","VolcanoContent","TableContents","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","subRows","about","earthquake","tsunami","landslide","volcano","toggledRow","arguments","length","undefined","toggledRows","setState","_this2","onClick","toggleSubRow","aboutContent","alt","src","process","earthquakeContent","volcanoContent","landslideContent","tsunamiContent","App","App_TableContents","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.60041fe2.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nconst aboutText = {\n  opening: {\n    leadText: \"Quick Notes: \",\n    text: \"Japan is sitting on the Pacific Ring of Fire and causes frequent earthquakes, which often triggers tsunami and volcanic eruptions. Also due to the geographic, topographic, and climate conditions, there are frequent landslides with heavy rain and typhoons throughout the Japanese archipelago.\",\n   },\n   imitationGame: {\n     one: \"状況設定\",\n     two: \"ファシリテーターの指示・問い\",\n     three: {\n       left: \"覚えてほしい言葉\",\n       right: \"覚えてほしい文\",\n     },\n     four: \"必要な知識\",\n     five: \"Q & A\",\n     six: \"JETの先生の解答例\",\n   },\n}\n\nclass AboutContent extends Component {\n  render() {\n    let toggle = \"\";\n    if(this.props.toggle === true) {\n      toggle = \"-active\"\n    }\n\n    return (\n      <div className={\"sub-row\" + toggle}>\n        <div className=\"chapter-content\">\n          <p className=\"red-thin-round-border light-red-background\"><b>{aboutText.opening.leadText}</b>{aboutText.opening.text}</p>\n\n          <h2>Disaster Imagination Game</h2>\n          <div className=\"flex-vertical\">\n            <div className=\"static-box round-border blue-background blue-border\">{aboutText.imitationGame.one}</div>\n            <div className=\"down\"><i></i></div>\n            <div className=\"static-box round-border light-orange-border light-brown-background \">{aboutText.imitationGame.two}</div>\n            <div className=\"down\"><i></i></div>\n            <div className=\"flex-row\">\n              <div className=\"static-box round-border light-green-border light-green-background\">{aboutText.imitationGame.three.left}</div>\n              <div className=\"static-box round-border light-orange-border salmon-background\">{aboutText.imitationGame.three.right}</div>\n            </div>\n            <div className=\"down\"><i></i></div>\n            <div className=\"static-box round-border dark-red-border light-pink-background\">{aboutText.imitationGame.four}</div>\n            <div className=\"down\"><i></i></div>\n            <div className=\"static-box round-border purple-border purple-background\">{aboutText.imitationGame.five}</div>\n            <div className=\"down\"><i></i></div>\n            <div className=\"static-box round-border dark-red-border\">{aboutText.imitationGame.six}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AboutContent;\n","import React, {Component} from 'react';\n\nimport earthquakeText from './json/earthquakeText.json';\n\nconst reportVocab = earthquakeText.reportVocab;\nconst tvVocabJson = earthquakeText.tvRikai.vocab;\n\nconst tvPhraseJson = earthquakeText.tvRikai.phrase;\nconst tvPhraseArr = [];\nObject.keys(tvPhraseJson).forEach(key => {\n  tvPhraseArr.push(tvPhraseJson[key]);\n});\n\nconst scenarioTwoVocab = earthquakeText.scenario2.vocab;\nconst scenarioTwoPhrases = earthquakeText.scenario2.phrase;\n\nfunction RenderObjectsOfList(props) {\n  const scen2Arr = Object.keys(props.content).map((key, index) => {\n    let wordList = [];\n    wordList = props.content[key].map((word, index) => {\n      return( <div key={index}>{word}</div> );\n    });\n\n    return(\n        <div className={props.className} key={index}>\n          {wordList}\n        </div>\n      );\n  });\n\n  return(\n    <div className=\"vocab-grid\">\n      {scen2Arr}\n    </div>\n  );\n}\n\nclass EarthquakeContent extends Component {\n  render() {\n    let toggle = \"\";\n    if(this.props.toggle === true) {\n      toggle = \"-active\"\n    }\n\n    return (\n      <div className={\"sub-row\" + toggle}>\n        <div className=\"chapter-content\">\n          <h2>自分を守る編</h2>\n\n          <p className=\"static-box round-border blue-border\">{earthquakeText.goal}</p><br/>\n\n          <p className=\"static-box round-border blue-border blue-background\">{earthquakeText.scenario.one}</p><br/>\n          <p className=\"static-box round-border blue-border blue-background\">{earthquakeText.scenario.two}</p><br/>\n\n          <p className=\"static-box round-border light-brown-border light-brown-background\">{earthquakeText.question}</p><br/>\n          <p className=\"static-box\">{earthquakeText.actionOne}</p><br/>\n          <div className=\"flex-center\">\n            <p className=\"static-box round-border dark-red-border\">{earthquakeText.actionOneResult}</p><br/>\n            <div className=\"speech-bubble\"><h2>良い行動</h2></div>\n          </div>\n          <p className=\"static-box\">{earthquakeText.actionTwo}</p><br/>\n          <div className=\"flex-center\">\n            <p className=\"round-border dark-red-border\">{earthquakeText.actionTwoResult}</p>\n            <div className=\"speech-bubble\"><h2>悪い行動</h2></div>\n          </div>\n\n          <p className=\"red-thin-round-border light-red-background\">{earthquakeText.youtubeBox.emergencyInfo}<br/>\n            <b>{earthquakeText.youtubeBox.linkOne.leadText}</b><a href={earthquakeText.youtubeBox.linkOne.link}>{earthquakeText.youtubeBox.linkOne.link}</a><br/>\n            <b>{earthquakeText.youtubeBox.linkTwo.leadText}</b><a href={earthquakeText.youtubeBox.linkTwo.link}>{earthquakeText.youtubeBox.linkTwo.link}</a></p>\n\n            <div className=\"flex-vertical\">\n              <p className=\"static-box round-border light-green-border light-green-background\">{earthquakeText.tvScenario.one}</p>\n              <p className=\"static-box round-border dark-red-border\">{earthquakeText.tvScenario.two}</p>\n            </div>\n\n            <p className=\"static-box center-text square-border light-green-border\">{earthquakeText.tvScenario.three}</p><br/>\n\n            <RenderObjectsOfList\n              content={reportVocab}\n              className=\"round-border light-green-background\"></RenderObjectsOfList>\n\n            <p className=\"round-border dark-red-border\">\n              <b>{earthquakeText.definitionRed.mag}</b>{earthquakeText.definitionRed.magnitudeDef}<br/>\n              <b>{earthquakeText.definitionRed.shindo}</b>{earthquakeText.definitionRed.shindoDef}<br/>\n              <a href={earthquakeText.definitionRed.link}>{earthquakeText.definitionRed.link}</a>\n            </p>\n\n            <div className=\"flex-row\">\n              <p className=\"round-border red-background\">{earthquakeText.eqRecordRow.kobe}</p>\n              <p className=\"round-border red-background\">{earthquakeText.eqRecordRow.tohoku}</p>\n              <p className=\"round-border red-background\">{earthquakeText.eqRecordRow.kumamoto}</p>\n            </div>\n\n            <p className=\"static-box center-text square-border light-green-border\">{earthquakeText.tvRikai.header}</p><br/>\n\n            <RenderObjectsOfList\n              content={tvVocabJson}\n              className=\"round-border light-green-background\"\n            />\n\n            <RenderObjectsOfList\n              content={tvPhraseJson}\n              className=\"round-border salmon-background\"\n            />\n\n            <p className=\"red-thin-round-border red-background\">\n              <b>Quick notes:</b><br/>\n              {earthquakeText.quickNotes.point1}<br/>\n              {earthquakeText.quickNotes.point2}<br/>\n              {earthquakeText.quickNotes.point3}\n            </p>\n\n            <h2>自分を守る編（２）</h2>\n            <p className=\"round-border light-brown-border light-brown-background\">\n              {earthquakeText.scenario2.one}<br/>\n              {earthquakeText.scenario2.two}\n            </p>\n            <p className=\"round-border dark-red-border\">\n              {earthquakeText.scenario2.action}\n            </p>\n            <p className=\"square-border light-green-border\">\n              {earthquakeText.scenario2.vocabHeader}\n            </p>\n\n            <RenderObjectsOfList\n              content={scenarioTwoVocab}\n              className=\"round-border light-green-background\"\n            />\n\n            <RenderObjectsOfList\n              content={scenarioTwoPhrases}\n              className=\"round-border salmon-background\"\n            />\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EarthquakeContent;\n","import React, {Component} from 'react';\n\nconst tsunamiText = {\n  opening: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\n}\n\nclass TsunamiContent extends Component {\n  render() {\n    let toggle = \"\";\n    if(this.props.toggle === true) {\n      toggle = \"-active\"\n    }\n\n    return (\n\n      <div className={\"sub-row\" + toggle}>\n        <p>{tsunamiText.opening}</p>\n      </div>\n    );\n  }\n}\n\nexport default TsunamiContent;\n","import React, {Component} from 'react';\n\nconst landslideText = {\n  opening: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\n}\n\nclass LandslideContent extends Component {\n  render() {\n    let toggle = \"\";\n    if(this.props.toggle === true) {\n      toggle = \"-active\"\n    }\n\n    return (\n\n      <div className={\"sub-row\" + toggle}>\n        <p>{landslideText.opening}</p>\n      </div>\n    );\n  }\n}\n\nexport default LandslideContent;\n","import React, {Component} from 'react';\n\nconst volcanoText = {\n  opening: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\n}\n\nclass VolcanoContent extends Component {\n  render() {\n    let toggle = \"\";\n    if(this.props.toggle === true) {\n      toggle = \"-active\"\n    }\n\n    return (\n      <div className={\"sub-row\" + toggle}>\n        <p>{volcanoText.opening}</p>\n      </div>\n    );\n  }\n}\n\nexport default VolcanoContent;\n","import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport AboutContent from \"./content/aboutContent.js\";\nimport EarthquakeContent from \"./content/earthquakeContent.js\";\nimport TsunamiContent from \"./content/tsunamiContent.js\";\nimport LandslideContent from \"./content/landslideContent.js\";\nimport VolcanoContent from \"./content/volcanoContent.js\";\n\nclass TableContents extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      subRows: {\n        \"about\": false,\n        \"earthquake\": true,\n        \"tsunami\": false,\n        \"landslide\": false,\n        \"volcano\": false,\n      },\n    };\n  }\n\n  toggleSubRow(toggledRow = null) {\n    if(toggledRow === null) {\n      return;\n    }\n    // const toggledRows = {\"about\": false, \"earthquake\": false};\n    const toggledRows = this.state.subRows;\n    toggledRows[toggledRow] = !toggledRows[toggledRow];\n    this.setState({subRows: toggledRows});\n  }\n\n  render() {\n    return(\n      <div className=\"table-content-rows\">\n        <div className=\"content-row\" onClick={() => this.toggleSubRow(\"about\")}>\n          <span>About</span>\n        </div>\n        <AboutContent toggle={this.state.subRows.about}/>\n\n        <div className=\"content-row\" onClick={() => this.toggleSubRow(\"earthquake\")}>\n          <span>Earthquake</span>\n          <div className=\"content-row-img\">\n            <img alt=\"\" src={process.env.PUBLIC_URL + \"/imgs/earthquake.jpeg\"}/>\n          </div>\n        </div>\n        <EarthquakeContent toggle={this.state.subRows.earthquake}/>\n\n        <div className=\"content-row\" onClick={() => this.toggleSubRow(\"volcano\")}>\n          <span>Volcano</span>\n          <div className=\"content-row-img\">\n            <img alt=\"\" src={process.env.PUBLIC_URL + \"/imgs/volcano.png\"}/>\n          </div>\n        </div>\n        <VolcanoContent toggle={this.state.subRows.volcano}/>\n\n        <div className=\"content-row\" onClick={() => this.toggleSubRow(\"landslide\")}>\n          <span>Landslide</span>\n          <div className=\"content-row-img\">\n            <img alt=\"\" src={process.env.PUBLIC_URL + \"/imgs/landslide.png\"}/>\n          </div>\n        </div>\n        <LandslideContent toggle={this.state.subRows.landslide}/>\n\n        <div className=\"content-row\" onClick={() => this.toggleSubRow(\"tsunami\")}>\n          <span>Tsunami</span>\n          <div className=\"content-row-img\">\n            <img alt=\"\" src={process.env.PUBLIC_URL + \"/imgs/tsunami.png\"}/>\n          </div>\n        </div>\n        <TsunamiContent toggle={this.state.subRows.tsunami}/>\n\n      </div>\n    );\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"landing-page\">\n        <div className=\"header\">\n          <h1>Disaster Preparedness Drill Book in Japanese</h1>\n        </div>\n        <TableContents />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}